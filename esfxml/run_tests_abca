#!/usr/bin/env ruby

# This doesn't test esf->xml->esf (esf == esf)
# It tests esf->xml->esf->xml (xml == xml)
# which is a weaker condition

require "fileutils"

class SampleTest
  def initialize(filename)
    @filename = filename
  end
  def source
    "samples/#{@filename}"
  end
  def xmldir
    "tmp/" + @filename.gsub(".", "_") + "_dir"
  end
  def xmldir2
    "tmp/" + @filename.gsub(".", "_") + "_dir2"
  end
  def recreated
    "tmp/recreated_#{@filename}"
  end
  def size
    File.size(source)
  end
  def ruby
    # %W[time jruby --server -J-Xmx2048m]
    %W[ruby]
  end
  def convert!
    puts "Converting #{@filename}"
    FileUtils.rm_rf xmldir
    system *(ruby + ["./esf2xml", source, xmldir])
  end
  def convert_re!
    puts "Converting again #{@filename}"
    FileUtils.rm_rf xmldir2
    system *(ruby + ["./esf2xml", recreated, xmldir2])
  end
  
  def convert_back!
    puts "Recreating #{@filename}"
    FileUtils.rm_rf recreated
    system *(ruby + ["./xml2esf", xmldir, recreated])
  end
  def compare!
    system "diff", "-ruN", xmldir, xmldir2
    #system "diff", source, recreated
  end
  def run!
    convert! or return 1
    convert_back! or return 1
    convert_re! or return 1
    compare!
  end
end

sample_tests = [
  "startpos_boshin.esf",
].map{|filename| SampleTest.new(filename)}.sort_by(&:size)

FileUtils.mkdir_p "tmp"
sample_tests.each do |test|
  test.run!
end
