#!/usr/bin/env ruby

require_relative "anim"

class Anim2Json < BaseAnim2Json
  def parse_bone_frame_data
    7.times.map{ get_flt }
  end

  def parse
    header = {"version" => get_u4, "fps" => get_flt, "duration" => get_flt}
    raise unless header["version"] == 1

    bone_count = get_u4
    bones = bone_count.times.map{ [get_str, get_i4] }
    warn "Skeleton not -1" unless bones[0][1] == -1
    # Possible to have other unattached bones
    warn "Not valid bone attachments" unless bones[1..-1].map(&:last).grep_v(-1...bone_count).empty?

    frame_count = get_u4
    frames = frame_count.times.map{
      bone_count.times.map{
        parse_bone_frame_data
      }
    }

    extras =  get_u4.times.map{ get_u4.times.map{ get_str } }

    raise unless eof?

    {
      "header" => header,
      "bones" => bones,
      "frames" => frames,
      "extras" => extras,
    }
  end

  def call
    @output_path.write JSON.pretty_generate(parse)
  end
end

unless ARGV.size == 2
  STDERR.puts "#{$0} file.anim file.json"
  exit 1
end

Anim2Json.new(ARGV[0], ARGV[1]).call
